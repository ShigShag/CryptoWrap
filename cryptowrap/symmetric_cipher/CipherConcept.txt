Symetric Cipher Interface concept

Challenges:
- Key Übergabe oder Erstellung --> Key ist NULL oder nicht
- Rückgabe von Key und anderen Parametern wie IV
- Übergabe von gewünschtem Algorithmus
  - Nicht alle Betriebsmodis haben die selben Voraussetzung
- Verschlüsselung in place oder nicht
- Padding oder nicht
- IV ans Ende schreiben oder nicht

Betriebsmodis:
ecb = Padding 
cbc = Padding + IV
cfb =  IV
ofb =  IV
ctr =  IV
xts = Brauch doppelte Key length --> xts_128 Keylength: 256 xts_256 Keylength: 512 = Brauch einen Plaintext von mindestens 16 Byte | höchstens 16777216 bytes

HMAC = WARNING: this is not intended for usage outside of TLS and requires calling of some undocumented ctrl functions. These ciphers do not conform to the EVP AEAD interface. https://beta.openssl.org/docs/man3.0/man3/EVP_aes_256_cbc_hmac_sha256.html

ccm = IV Length: 7 - 13 | TAG length: 4,6,8,10,12,14,16
gcm = Besser als CCM, IV ist normalerweise 12 lang aber kann auch größer sein | TAG_len 1-16 inclusiv
wrap
wrap_pad
ocb



Ideen:

CTX erstellen also key und iv und modus, die Funktion klärt Key und IV Länge und erstellt die im Zweifel. 
Die kopiert den Key und die IV rein, bzw. erstellt diese dann mit random Funktionen

Es gibt eine zweite CTX init mit Key Derivation Zeugs, basierend auf Passwort oder so
